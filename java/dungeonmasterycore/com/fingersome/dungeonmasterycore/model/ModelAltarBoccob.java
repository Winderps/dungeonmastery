package com.fingersome.dungeonmasterycore.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelAltarBoccob extends ModelBase
{
  //fields
    ModelRenderer Base;
    ModelRenderer Foot1;
    ModelRenderer Foot2;
    ModelRenderer Foot3;
    ModelRenderer Foot4;
    ModelRenderer Pillar1;
    ModelRenderer Pillar2;
    ModelRenderer Crossbar;
    ModelRenderer Platform;
    ModelRenderer Support1;
    ModelRenderer Support2;
    ModelRenderer Support3;
    ModelRenderer Support4;
    ModelRenderer Surface;
    ModelRenderer Spacer1;
    ModelRenderer Spacer2;
    ModelRenderer Top;
    ModelRenderer Ornament1;
    ModelRenderer Ornament2;
    ModelRenderer Ornament3;
    ModelRenderer Ornament4;
    ModelRenderer Cloth1;
    ModelRenderer Cloth2;
    ModelRenderer Pentagon1;
    ModelRenderer Pentagon2;
    ModelRenderer Pentagon3;
    ModelRenderer Pentagon4;
    ModelRenderer Pentagon5;
    ModelRenderer Pentagon6;
    ModelRenderer Pentagon7;
    ModelRenderer Pentagon8;
    ModelRenderer Pentagon9;
    ModelRenderer Pentagon10;
    ModelRenderer Pentagon11;
    ModelRenderer Pentagon12;
  
  public ModelAltarBoccob()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      Base = new ModelRenderer(this, 32, 25);
      Base.addBox(0F, 0F, 0F, 10, 1, 6);
      Base.setRotationPoint(-5F, 22F, -3F);
      Base.setTextureSize(128, 64);
      Base.mirror = true;
      setRotation(Base, 0F, 0F, 0F);
      Foot1 = new ModelRenderer(this, 26, 0);
      Foot1.addBox(0F, 0F, 0F, 2, 1, 1);
      Foot1.setRotationPoint(-6F, 23F, 2F);
      Foot1.setTextureSize(128, 64);
      Foot1.mirror = true;
      setRotation(Foot1, 0F, 0F, 0F);
      Foot2 = new ModelRenderer(this, 26, 0);
      Foot2.addBox(0F, 0F, 0F, 2, 1, 1);
      Foot2.setRotationPoint(4F, 23F, 2F);
      Foot2.setTextureSize(128, 64);
      Foot2.mirror = true;
      setRotation(Foot2, 0F, 0F, 0F);
      Foot3 = new ModelRenderer(this, 26, 0);
      Foot3.addBox(0F, 0F, 0F, 2, 1, 1);
      Foot3.setRotationPoint(-6F, 23F, -3F);
      Foot3.setTextureSize(128, 64);
      Foot3.mirror = true;
      setRotation(Foot3, 0F, 0F, 0F);
      Foot4 = new ModelRenderer(this, 26, 0);
      Foot4.addBox(0F, 0F, 0F, 2, 1, 1);
      Foot4.setRotationPoint(4F, 23F, -3F);
      Foot4.setTextureSize(128, 64);
      Foot4.mirror = true;
      setRotation(Foot4, 0F, 0F, 0F);
      Pillar1 = new ModelRenderer(this, 38, 0);
      Pillar1.addBox(0F, 0F, 0F, 2, 6, 2);
      Pillar1.setRotationPoint(-4F, 16F, -1F);
      Pillar1.setTextureSize(128, 64);
      Pillar1.mirror = true;
      setRotation(Pillar1, 0F, 0F, 0F);
      Pillar2 = new ModelRenderer(this, 56, 0);
      Pillar2.addBox(0F, 0F, 0F, 2, 6, 2);
      Pillar2.setRotationPoint(2F, 16F, -1F);
      Pillar2.setTextureSize(128, 64);
      Pillar2.mirror = true;
      setRotation(Pillar2, 0F, 0F, 0F);
      Crossbar = new ModelRenderer(this, 46, 6);
      Crossbar.addBox(0F, 0F, 0F, 4, 1, 1);
      Crossbar.setRotationPoint(-2F, 19F, 0F);
      Crossbar.setTextureSize(128, 64);
      Crossbar.mirror = true;
      setRotation(Crossbar, 0F, 0F, 0F);
      Platform = new ModelRenderer(this, 4, 12);
      Platform.addBox(0F, 0F, 0F, 10, 1, 6);
      Platform.setRotationPoint(-5F, 15F, -3F);
      Platform.setTextureSize(128, 64);
      Platform.mirror = true;
      setRotation(Platform, 0F, 0F, 0F);
      Support1 = new ModelRenderer(this, 41, 14);
      Support1.addBox(0F, 0F, 0F, 1, 1, 1);
      Support1.setRotationPoint(-4F, 14F, 1F);
      Support1.setTextureSize(128, 64);
      Support1.mirror = true;
      setRotation(Support1, 0F, 0F, 0F);
      Support2 = new ModelRenderer(this, 41, 14);
      Support2.addBox(0F, 0F, 0F, 1, 1, 1);
      Support2.setRotationPoint(3F, 14F, 1F);
      Support2.setTextureSize(128, 64);
      Support2.mirror = true;
      setRotation(Support2, 0F, 0F, 0F);
      Support3 = new ModelRenderer(this, 41, 14);
      Support3.addBox(0F, 0F, 0F, 1, 1, 1);
      Support3.setRotationPoint(-4F, 14F, -2F);
      Support3.setTextureSize(128, 64);
      Support3.mirror = true;
      setRotation(Support3, 0F, 0F, 0F);
      Support4 = new ModelRenderer(this, 41, 14);
      Support4.addBox(0F, 0F, 0F, 1, 1, 1);
      Support4.setRotationPoint(3F, 14F, -2F);
      Support4.setTextureSize(128, 64);
      Support4.mirror = true;
      setRotation(Support4, 0F, 0F, 0F);
      Surface = new ModelRenderer(this, 0, 10);
      Surface.addBox(0F, 0F, 0F, 12, 1, 8);
      Surface.setRotationPoint(-6F, 13F, -4F);
      Surface.setTextureSize(128, 64);
      Surface.mirror = true;
      setRotation(Surface, 0F, 0F, 0F);
      Spacer1 = new ModelRenderer(this, 15, 4);
      Spacer1.addBox(0F, 0F, 0F, 1, 1, 4);
      Spacer1.setRotationPoint(-2F, 12F, -2F);
      Spacer1.setTextureSize(128, 64);
      Spacer1.mirror = true;
      setRotation(Spacer1, 0F, 0F, 0F);
      Spacer2 = new ModelRenderer(this, 15, 4);
      Spacer2.addBox(0F, 0F, 0F, 1, 1, 4);
      Spacer2.setRotationPoint(1F, 12F, -2F);
      Spacer2.setTextureSize(128, 64);
      Spacer2.mirror = true;
      setRotation(Spacer2, 0F, 0F, 0F);
      Top = new ModelRenderer(this, 8, 2);
      Top.addBox(0F, 0F, 0F, 6, 1, 6);
      Top.setRotationPoint(-3F, 11F, -3F);
      Top.setTextureSize(128, 64);
      Top.mirror = true;
      setRotation(Top, 0F, 0F, 0F);
      Ornament1 = new ModelRenderer(this, 0, 0);
      Ornament1.addBox(0F, 0F, 0F, 1, 1, 1);
      Ornament1.setRotationPoint(-5F, 12F, 2F);
      Ornament1.setTextureSize(128, 64);
      Ornament1.mirror = true;
      setRotation(Ornament1, 0F, 0F, 0F);
      Ornament2 = new ModelRenderer(this, 0, 0);
      Ornament2.addBox(0F, 0F, 0F, 1, 1, 1);
      Ornament2.setRotationPoint(4F, 12F, 2F);
      Ornament2.setTextureSize(128, 64);
      Ornament2.mirror = true;
      setRotation(Ornament2, 0F, 0F, 0F);
      Ornament3 = new ModelRenderer(this, 0, 0);
      Ornament3.addBox(0F, 0F, 0F, 1, 1, 1);
      Ornament3.setRotationPoint(-5F, 12F, -3F);
      Ornament3.setTextureSize(128, 64);
      Ornament3.mirror = true;
      setRotation(Ornament3, 0F, 0F, 0F);
      Ornament4 = new ModelRenderer(this, 0, 0);
      Ornament4.addBox(0F, 0F, 0F, 1, 1, 1);
      Ornament4.setRotationPoint(4F, 12F, -3F);
      Ornament4.setTextureSize(128, 64);
      Ornament4.mirror = true;
      setRotation(Ornament4, 0F, 0F, 0F);
      Cloth1 = new ModelRenderer(this, 0, 20);
      Cloth1.addBox(0F, 0F, 0F, 1, 6, 6);
      Cloth1.setRotationPoint(-6F, 14F, -3F);
      Cloth1.setTextureSize(128, 64);
      Cloth1.mirror = true;
      setRotation(Cloth1, 0F, 0F, 0F);
      Cloth2 = new ModelRenderer(this, 0, 20);
      Cloth2.addBox(0F, 0F, 0F, 1, 6, 6);
      Cloth2.setRotationPoint(5F, 14F, -3F);
      Cloth2.setTextureSize(128, 64);
      Cloth2.mirror = true;
      setRotation(Cloth2, 0F, 0F, 0F);
      Pentagon1 = new ModelRenderer(this, 76, 20);
      Pentagon1.addBox(0F, 0F, 0F, 10, 1, 2);
      Pentagon1.setRotationPoint(-5F, 10F, -1F);
      Pentagon1.setTextureSize(128, 64);
      Pentagon1.mirror = true;
      setRotation(Pentagon1, 0F, 0F, 0F);
      Pentagon2 = new ModelRenderer(this, 76, 19);
      Pentagon2.addBox(0F, 0F, 0F, 10, 1, 2);
      Pentagon2.setRotationPoint(-5F, 9F, -1F);
      Pentagon2.setTextureSize(128, 64);
      Pentagon2.mirror = true;
      setRotation(Pentagon2, 0F, 0F, 0F);
      Pentagon3 = new ModelRenderer(this, 75, 17);
      Pentagon3.addBox(0F, 0F, 0F, 12, 2, 2);
      Pentagon3.setRotationPoint(-6F, 7F, -1F);
      Pentagon3.setTextureSize(128, 64);
      Pentagon3.mirror = true;
      setRotation(Pentagon3, 0F, 0F, 0F);
      Pentagon4 = new ModelRenderer(this, 74, 15);
      Pentagon4.addBox(0F, 0F, 0F, 14, 2, 2);
      Pentagon4.setRotationPoint(-7F, 5F, -1F);
      Pentagon4.setTextureSize(128, 64);
      Pentagon4.mirror = true;
      setRotation(Pentagon4, 0F, 0F, 0F);
      Pentagon5 = new ModelRenderer(this, 73, 12);
      Pentagon5.addBox(0F, 0F, 0F, 16, 3, 2);
      Pentagon5.setRotationPoint(-8F, 2F, -1F);
      Pentagon5.setTextureSize(128, 64);
      Pentagon5.mirror = true;
      setRotation(Pentagon5, 0F, 0F, 0F);
      Pentagon6 = new ModelRenderer(this, 74, 11);
      Pentagon6.addBox(0F, 0F, 0F, 14, 1, 2);
      Pentagon6.setRotationPoint(-7F, 1F, -1F);
      Pentagon6.setTextureSize(128, 64);
      Pentagon6.mirror = true;
      setRotation(Pentagon6, 0F, 0F, 0F);
      Pentagon7 = new ModelRenderer(this, 75, 10);
      Pentagon7.addBox(0F, 0F, 0F, 12, 1, 2);
      Pentagon7.setRotationPoint(-6F, 0F, -1F);
      Pentagon7.setTextureSize(128, 64);
      Pentagon7.mirror = true;
      setRotation(Pentagon7, 0F, 0F, 0F);
      Pentagon8 = new ModelRenderer(this, 76, 9);
      Pentagon8.addBox(0F, 0F, 0F, 10, 1, 2);
      Pentagon8.setRotationPoint(-5F, -1F, -1F);
      Pentagon8.setTextureSize(128, 64);
      Pentagon8.mirror = true;
      setRotation(Pentagon8, 0F, 0F, 0F);
      Pentagon9 = new ModelRenderer(this, 77, 8);
      Pentagon9.addBox(0F, 0F, 0F, 8, 1, 2);
      Pentagon9.setRotationPoint(-4F, -2F, -1F);
      Pentagon9.setTextureSize(128, 64);
      Pentagon9.mirror = true;
      setRotation(Pentagon9, 0F, 0F, 0F);
      Pentagon10 = new ModelRenderer(this, 78, 7);
      Pentagon10.addBox(0F, 0F, 0F, 6, 1, 2);
      Pentagon10.setRotationPoint(-3F, -3F, -1F);
      Pentagon10.setTextureSize(128, 64);
      Pentagon10.mirror = true;
      setRotation(Pentagon10, 0F, 0F, 0F);
      Pentagon11 = new ModelRenderer(this, 79, 6);
      Pentagon11.addBox(0F, 0F, 0F, 4, 1, 2);
      Pentagon11.setRotationPoint(-2F, -4F, -1F);
      Pentagon11.setTextureSize(128, 64);
      Pentagon11.mirror = true;
      setRotation(Pentagon11, 0F, 0F, 0F);
      Pentagon12 = new ModelRenderer(this, 80, 5);
      Pentagon12.addBox(0F, 0F, 0F, 2, 1, 2);
      Pentagon12.setRotationPoint(-1F, -5F, -1F);
      Pentagon12.setTextureSize(128, 64);
      Pentagon12.mirror = true;
      setRotation(Pentagon12, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Base.render(f5);
    Foot1.render(f5);
    Foot2.render(f5);
    Foot3.render(f5);
    Foot4.render(f5);
    Pillar1.render(f5);
    Pillar2.render(f5);
    Crossbar.render(f5);
    Platform.render(f5);
    Support1.render(f5);
    Support2.render(f5);
    Support3.render(f5);
    Support4.render(f5);
    Surface.render(f5);
    Spacer1.render(f5);
    Spacer2.render(f5);
    Top.render(f5);
    Ornament1.render(f5);
    Ornament2.render(f5);
    Ornament3.render(f5);
    Ornament4.render(f5);
    Cloth1.render(f5);
    Cloth2.render(f5);
    Pentagon1.render(f5);
    Pentagon2.render(f5);
    Pentagon3.render(f5);
    Pentagon4.render(f5);
    Pentagon5.render(f5);
    Pentagon6.render(f5);
    Pentagon7.render(f5);
    Pentagon8.render(f5);
    Pentagon9.render(f5);
    Pentagon10.render(f5);
    Pentagon11.render(f5);
    Pentagon12.render(f5);
  }
  
  
  public void renderModel(float f)
  {
    Base.render(f);
    Foot1.render(f);
    Foot2.render(f);
    Foot3.render(f);
    Foot4.render(f);
    Pillar1.render(f);
    Pillar2.render(f);
    Crossbar.render(f);
    Platform.render(f);
    Support1.render(f);
    Support2.render(f);
    Support3.render(f);
    Support4.render(f);
    Surface.render(f);
    Spacer1.render(f);
    Spacer2.render(f);
    Top.render(f);
    Ornament1.render(f);
    Ornament2.render(f);
    Ornament3.render(f);
    Ornament4.render(f);
    Cloth1.render(f);
    Cloth2.render(f);
    Pentagon1.render(f);
    Pentagon2.render(f);
    Pentagon3.render(f);
    Pentagon4.render(f);
    Pentagon5.render(f);
    Pentagon6.render(f);
    Pentagon7.render(f);
    Pentagon8.render(f);
    Pentagon9.render(f);
    Pentagon10.render(f);
    Pentagon11.render(f);
    Pentagon12.render(f);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
